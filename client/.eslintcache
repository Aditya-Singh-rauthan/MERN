[{"/home/aditya/Desktop/MyProjects/MERN/client/src/index.js":"1","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/auth.js":"2","/home/aditya/Desktop/MyProjects/MERN/client/src/components/auth/Login.js":"3","/home/aditya/Desktop/MyProjects/MERN/client/src/components/dashboard/Dashboard.js":"4","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/CreateProfile.js":"5","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/EditProfile.js":"6","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profiles/Profile.js":"7","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/types.js":"8","/home/aditya/Desktop/MyProjects/MERN/client/src/components/dashboard/DashboardActions.js":"9","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profiles/ProfileItem.js":"10","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/posts.js":"11","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/index.js":"12","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/navbar.js":"13","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/posts.js":"14","/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/Navbar.js":"15","/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/Alert.js":"16","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/AddExperience.js":"17","/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/Posts.js":"18","/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/spinner.js":"19","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/navbar.js":"20","/home/aditya/Desktop/MyProjects/MERN/client/src/components/dashboard/Education.js":"21","/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/PostItem.js":"22","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/profile.js":"23","/home/aditya/Desktop/MyProjects/MERN/client/src/utils/setAuthToken.js":"24","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/AddEducation.js":"25","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/profile.js":"26","/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/CreatePost.js":"27","/home/aditya/Desktop/MyProjects/MERN/client/src/components/auth/Register.js":"28","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/alert.js":"29","/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/Post.js":"30","/home/aditya/Desktop/MyProjects/MERN/client/src/store.js":"31","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profiles/Profiles.js":"32","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/auth.js":"33","/home/aditya/Desktop/MyProjects/MERN/client/src/App.js":"34","/home/aditya/Desktop/MyProjects/MERN/client/src/components/comments/CommentForm.js":"35","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/alert.js":"36","/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/Landing.js":"37","/home/aditya/Desktop/MyProjects/MERN/client/src/components/comments/comment.js":"38"},{"size":484,"mtime":1611198795302,"results":"39","hashOfConfig":"40"},{"size":2154,"mtime":1611198795298,"results":"41","hashOfConfig":"40"},{"size":2486,"mtime":1611198795298,"results":"42","hashOfConfig":"40"},{"size":2064,"mtime":1611198795298,"results":"43","hashOfConfig":"40"},{"size":7019,"mtime":1611198795298,"results":"44","hashOfConfig":"40"},{"size":8201,"mtime":1611198795298,"results":"45","hashOfConfig":"40"},{"size":2932,"mtime":1611198795302,"results":"46","hashOfConfig":"40"},{"size":1062,"mtime":1611198795298,"results":"47","hashOfConfig":"40"},{"size":918,"mtime":1611198795298,"results":"48","hashOfConfig":"40"},{"size":985,"mtime":1611198795302,"results":"49","hashOfConfig":"40"},{"size":3630,"mtime":1611198795298,"results":"50","hashOfConfig":"40"},{"size":289,"mtime":1611198795302,"results":"51","hashOfConfig":"40"},{"size":408,"mtime":1611198795302,"results":"52","hashOfConfig":"40"},{"size":1085,"mtime":1611198795302,"results":"53","hashOfConfig":"40"},{"size":3008,"mtime":1611198795298,"results":"54","hashOfConfig":"40"},{"size":505,"mtime":1611198795298,"results":"55","hashOfConfig":"40"},{"size":5134,"mtime":1611198795298,"results":"56","hashOfConfig":"40"},{"size":2315,"mtime":1611201902705,"results":"57","hashOfConfig":"40"},{"size":365,"mtime":1611198795298,"results":"58","hashOfConfig":"40"},{"size":246,"mtime":1611198795298,"results":"59","hashOfConfig":"40"},{"size":1458,"mtime":1611198795298,"results":"60","hashOfConfig":"40"},{"size":2434,"mtime":1611198795298,"results":"61","hashOfConfig":"40"},{"size":925,"mtime":1611198795302,"results":"62","hashOfConfig":"40"},{"size":242,"mtime":1611198795302,"results":"63","hashOfConfig":"40"},{"size":5141,"mtime":1611198795298,"results":"64","hashOfConfig":"40"},{"size":5902,"mtime":1611198795298,"results":"65","hashOfConfig":"40"},{"size":3826,"mtime":1611201939659,"results":"66","hashOfConfig":"40"},{"size":3781,"mtime":1611198795298,"results":"67","hashOfConfig":"40"},{"size":360,"mtime":1611198795298,"results":"68","hashOfConfig":"40"},{"size":2910,"mtime":1611198795298,"results":"69","hashOfConfig":"40"},{"size":384,"mtime":1611198795302,"results":"70","hashOfConfig":"40"},{"size":1104,"mtime":1611198795302,"results":"71","hashOfConfig":"40"},{"size":1066,"mtime":1611198795302,"results":"72","hashOfConfig":"40"},{"size":2354,"mtime":1611198795298,"results":"73","hashOfConfig":"40"},{"size":928,"mtime":1611198795298,"results":"74","hashOfConfig":"40"},{"size":378,"mtime":1611198795302,"results":"75","hashOfConfig":"40"},{"size":1235,"mtime":1611198795298,"results":"76","hashOfConfig":"40"},{"size":541,"mtime":1611198795298,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"en4v08",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"128"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aditya/Desktop/MyProjects/MERN/client/src/index.js",[],["173","174"],"/home/aditya/Desktop/MyProjects/MERN/client/src/actions/auth.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/auth/Login.js",[],["175","176"],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/dashboard/Dashboard.js",["177"],"import { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile, deleteProfile } from \"../../actions/profile\";\nimport React, { useEffect, Fragment } from \"react\";\nimport Spinner from \"../layout/spinner\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nconst Dashboard = (props) => {\n  useEffect(() => props.getCurrentProfile(), []);\n\n  if (props.isAuthenticated) {\n    return props.loading && props.profile.profile === null ? (\n      <Spinner />\n    ) : (\n      <Fragment>\n        <div className=\"main dashboard\">\n          <h1>Dashboard</h1>\n          <hr />\n          <br />\n          <br />\n\n          {props.profile.profile !== null ? (\n            <Fragment>\n              <h3>Welcome {props.profile.profile.user.name}</h3>\n              <br />\n              <DashboardActions />\n              <Experience experience={props.profile.profile.experience} />\n\n              <Education education={props.profile.profile.education} />\n              <br />\n\n              <hr />\n              <button\n                onClick={() => props.deleteProfile()}\n                className=\"btn-delete\"\n                style={{ margin: \"2vh\" }}\n              >\n                Delete Account\n              </button>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <br />\n              <p>You Have Not Setup Your Profile Yet.</p>\n              <br />\n              <br />\n              <Link to=\"/create-profile\" className=\"bn-signup\">\n                Create Profile\n              </Link>\n            </Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Register.isAuthenticated,\n    user: state.Register.user,\n    loading: state.profile.loading,\n    profile: state.profile,\n  };\n};\n\nexport default connect(mapStateToProps, { deleteProfile, getCurrentProfile })(\n  Dashboard\n);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/CreateProfile.js",["178"],"import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { createProfile } from \"../../actions/profile\";\nconst CreateProfile = (props) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const onChange = async (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log(formData);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    props.createProfile(formData, props.history);\n  };\n\n  if (!props.isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Fragment>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form\">\n          <h2>Create Profile :</h2>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"name\">Name*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-address-card icon\"></i>\n              <input\n                type=\"text\"\n                name=\"company\"\n                id=\"name\"\n                placeholder=\"Company*\"\n                value={formData.company}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"email\">Email*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-globe icon\"></i>\n              <input\n                type=\"text\"\n                name=\"website\"\n                id=\"website\"\n                placeholder=\"website\"\n                value={formData.website}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password\">Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-map-marker icon\"></i>\n              <input\n                type=\"text\"\n                name=\"location\"\n                id=\"location\"\n                placeholder=\"location\"\n                value={formData.location}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-bolt icon\"></i>\n              <input\n                type=\"text\"\n                name=\"status\"\n                id=\"status\"\n                placeholder=\"status\"\n                value={formData.status}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-cogs icon\"></i>\n              <input\n                type=\"text\"\n                name=\"skills\"\n                id=\"skills\"\n                placeholder=\"skills\"\n                value={formData.skills}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-github icon\"></i>\n              <input\n                type=\"text\"\n                name=\"githubusername\"\n                id=\"githubusernam\"\n                placeholder=\"githubusername\"\n                value={formData.githubusername}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-info-circle icon\"></i>\n              <textarea\n                name=\"bio\"\n                id=\"bio\"\n                placeholder=\"bio\"\n                value={formData.bio}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-twitter icon\"></i>\n              <input\n                type=\"text\"\n                name=\"twitter\"\n                id=\"twitter\"\n                placeholder=\"twitter\"\n                value={formData.twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-facebook icon\"></i>\n              <input\n                type=\"text\"\n                name=\"facebook\"\n                id=\"facebook\"\n                placeholder=\"facebook\"\n                value={formData.facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-youtube icon\"></i>\n              <input\n                type=\"text\"\n                name=\"youtube\"\n                id=\"youtube\"\n                placeholder=\"youtube\"\n                value={formData.youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-instagram icon\"></i>\n              <input\n                type=\"text\"\n                name=\"instagram\"\n                id=\"instagram\"\n                placeholder=\"instagram\"\n                value={formData.instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            <input type=\"submit\" name=\"submit\" id=\"submit\" value=\"update\" />\n          </div>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Register.isAuthenticated,\n  };\n};\n\nconst mapDispatchToProps = {\n  createProfile,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(CreateProfile));\n","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/EditProfile.js",["179","180"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\n//import { login } from \"../../actions/auth\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\nconst EditProfile = (props) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  useEffect(() => {\n    props.getCurrentProfile();\n    setFormData({\n      company: props.profile.profile ? props.profile.profile.company : \"\",\n      website: props.profile.profile ? props.profile.profile.website : \"\",\n      location: props.profile.profile ? props.profile.profile.location : \"\",\n      status: props.profile.profile ? props.profile.profile.status : \"\",\n      skills: props.profile.profile\n        ? props.profile.profile.skills.join(\", \")\n        : \"\",\n      githubusername: props.profile.profile\n        ? props.profile.profile.githubusername\n        : \"\",\n      bio: props.profile.profile ? props.profile.profile.bio : \"\",\n      twitter: props.profile.profile\n        ? props.profile.profile.social.twitter\n        : \"\",\n      facebook: props.profile.profile\n        ? props.profile.profile.social.facebook\n        : \"\",\n      youtube: props.profile.profile\n        ? props.profile.profile.social.youtube\n        : \"\",\n      instagram: props.profile.profile\n        ? props.profile.profile.social.instagram\n        : \"\",\n    });\n  }, []);\n\n  const onChange = async (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log(formData);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    props.createProfile(formData, props.history);\n  };\n\n  if (!props.isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Fragment>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form tile\">\n          <h2>Edit Profile :</h2>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"name\">Name*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-address-card icon\"></i>\n              <input\n                type=\"text\"\n                name=\"company\"\n                id=\"name\"\n                placeholder=\"Company*\"\n                value={formData.company}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"email\">Email*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-globe icon\"></i>\n              <input\n                type=\"text\"\n                name=\"website\"\n                id=\"website\"\n                placeholder=\"website\"\n                value={formData.website}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password\">Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-map-marker icon\"></i>\n              <input\n                type=\"text\"\n                name=\"location\"\n                id=\"location\"\n                placeholder=\"location\"\n                value={formData.location}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-bolt icon\"></i>\n              <input\n                type=\"text\"\n                name=\"status\"\n                id=\"status\"\n                placeholder=\"status\"\n                value={formData.status}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-cogs icon\"></i>\n              <input\n                type=\"text\"\n                name=\"skills\"\n                id=\"skills\"\n                placeholder=\"skills\"\n                value={formData.skills}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-github icon\"></i>\n              <input\n                type=\"text\"\n                name=\"githubusername\"\n                id=\"githubusernam\"\n                placeholder=\"githubusername\"\n                value={formData.githubusername}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-info-circle icon\"></i>\n              <textarea\n                name=\"bio\"\n                id=\"bio\"\n                placeholder=\"bio\"\n                value={formData.bio}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-twitter icon\"></i>\n              <input\n                type=\"text\"\n                name=\"twitter\"\n                id=\"twitter\"\n                placeholder=\"twitter\"\n                value={formData.twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-facebook icon\"></i>\n              <input\n                type=\"text\"\n                name=\"facebook\"\n                id=\"facebook\"\n                placeholder=\"facebook\"\n                value={formData.facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-youtube icon\"></i>\n              <input\n                type=\"text\"\n                name=\"youtube\"\n                id=\"youtube\"\n                placeholder=\"youtube\"\n                value={formData.youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-instagram icon\"></i>\n              <input\n                type=\"text\"\n                name=\"instagram\"\n                id=\"instagram\"\n                placeholder=\"instagram\"\n                value={formData.instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            <input type=\"submit\" name=\"submit\" id=\"submit\" value=\"update\" />\n          </div>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Register.isAuthenticated,\n    profile: state.profile,\n  };\n};\n\nconst mapDispatchToProps = {\n  createProfile,\n  getCurrentProfile,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(EditProfile));\n",["181","182"],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/profiles/Profile.js",["183","184"],"import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner.js\";\nimport { getProfileById } from \"../../actions/profile\";\nconst Profile = (props) => {\n  const userId = props.match.params.id;\n  useEffect(() => {\n    props.getProfileById(userId);\n  }, [props.getProfileById]);\n\n  console.log(props.profile.profile);\n  return (\n    <Fragment>\n      {props.profile.profile === null || props.profile.loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className=\"main\">\n            {\" \"}\n            <div className=\"headImg\">\n              <div className=\"profileImgm\">\n                <img className=\"img\" src={props.profile.profile.user.avatar} />\n              </div>\n              <div>\n                <h2>{props.profile.profile.user.name}</h2>\n              </div>\n              <div>{props.profile.profile.bio}</div>\n            </div>\n            <div className=\"Info\">\n              <div className=\"field\">\n                <h3>Company</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.company}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Status</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.status}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Location</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.location}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Website</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.website}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Github Username</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.githubusername}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Youtube</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.social.youtube}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Twitter</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.social.twitter}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Facebook</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.social.facebook}</h3>\n              </div>\n              <div className=\"field\">\n                <h3>Instagram</h3>\n                <h3>:</h3>\n                <h3>{props.profile.profile.social.instagram}</h3>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profile,\n    isAuthenticated: state.Register,\n  };\n};\nconst mapDispatchToprops = {\n  getProfileById,\n};\nexport default connect(mapStateToProps, mapDispatchToprops)(Profile);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/types.js",[],["185","186"],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/dashboard/DashboardActions.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/profiles/ProfileItem.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/actions/posts.js",["187","188"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  DELETE_POST,\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  ADD_COMMENT,\n} from \"./types\";\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\nexport const getPostById = (postid) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${postid}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\nexport const createPost = (formdata, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/posts\", formdata, config);\n\n    history.push(\"/posts\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((element) => {\n        dispatch(setAlert(element.msg, \"danger\"));\n      });\n    }\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\nexport const deletePost = (postid) => async (dispatch) => {\n  if (window.confirm(\"Are You Sure??\")) {\n    try {\n      const res = await axios.delete(`/api/posts/${postid}`);\n\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      });\n      dispatch(setAlert(\"Post Deleted\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((element) => {\n          dispatch(setAlert(element.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.data },\n      });\n    }\n  }\n};\n\nexport const likePost = (postid) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postid}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      dispatch(setAlert(errors.msg, \"primary\"));\n    }\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\nexport const unlikePost = (postid) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postid}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      dispatch(setAlert(errors.msg, \"primary\"));\n    }\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\nexport const addComment = (formdata, postid) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n    const res = await axios.post(\n      `/api/posts/comment/${postid}`,\n      formdata,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      dispatch(setAlert(errors.msg, \"primary\"));\n    }\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/index.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/navbar.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/posts.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/Navbar.js",["189","190"],"import React, { Fragment } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { activeNavbar, removeNavbar } from \"../../actions/navbar\";\nimport { logout } from \"../../actions/auth\";\nconst Navbar = (props) => {\n  const navActive = () => {\n    if (props.navbar) {\n      props.removeNavbar();\n    } else {\n      props.activeNavbar();\n    }\n  };\n\n  const authLinks = () => {\n    return (\n      <ul\n        className=\"Navlinks\"\n        style={props.navbar ? { transform: \"translate(0%)\" } : {}}\n      >\n        <Link\n          style={{ textDecoration: \"none\" }}\n          onClick={navActive}\n          to=\"/developers\"\n        >\n          <li>Home</li>\n        </Link>\n\n        <Link\n          style={{ textDecoration: \"none\" }}\n          onClick={navActive}\n          to=\"/dashboard\"\n        >\n          <li>Dashboard</li>\n        </Link>\n\n        <Link\n          style={{ textDecoration: \"none\" }}\n          onClick={navActive}\n          to=\"/posts\"\n        >\n          <li>Posts</li>\n        </Link>\n\n        <li onClick={props.logout}>\n          <a style={{ textDecoration: \"none\", color: \"white\" }} href=\"/\">\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n  };\n\n  const guestLinks = () => {\n    return (\n      <ul\n        className=\"Navlinks\"\n        style={props.navbar ? { transform: \"translate(0%)\" } : {}}\n      >\n        <Link style={{ textDecoration: \"none\" }} onClick={navActive} to=\"/\">\n          <li>Home</li>\n        </Link>\n        <Link\n          style={{ textDecoration: \"none\" }}\n          onClick={navActive}\n          to=\"/developers\"\n        >\n          <li>Developers</li>\n        </Link>\n        <Link\n          className=\"bn-login\"\n          style={{ textDecoration: \"none\" }}\n          onClick={navActive}\n          to=\"/login\"\n        >\n          <li>Login</li>\n        </Link>\n        <Link\n          className=\"bn-signup\"\n          style={{ textDecoration: \"none\" }}\n          onClick={navActive}\n          to=\"/register\"\n        >\n          <li>SignUp</li>\n        </Link>\n      </ul>\n    );\n  };\n  return (\n    <Fragment>\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img src=\"/logo.png\" width=\"80\" height=\"80\" />\n\n          <h1>DevConnector</h1>\n        </div>\n\n        <div className=\"Navbar\">\n          <nav>\n            {props.isAuthenticated ? authLinks() : guestLinks()}\n            <div className=\"burger\" onClick={navActive}>\n              <div className=\"b\"></div>\n              <div className=\"b\"></div>\n              <div className=\"b\"></div>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    navbar: state.navbar.active,\n    isAuthenticated: state.Register.isAuthenticated,\n    loading: state.Register.isAuthenticated,\n  };\n};\n\nconst mapDispatchToProps = {\n  activeNavbar,\n  removeNavbar,\n  logout,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/Alert.js",["191"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst Alert = (props) =>\n  props.alerts !== null &&\n  props.alerts.length > 0 &&\n  props.alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n// Alert.propTypes = {\n//   alerts: PropTypes.array.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/AddExperience.js",["192","193"],"import React, { Fragment, useState } from \"react\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\nconst AddExperience = (props) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    title: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const onChange = async (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log(formData);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    props.addExperience(formData, props.history);\n  };\n\n  if (!props.isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Fragment>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form tile\">\n          <h2>Add An Experience :</h2>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"name\">Name*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-address-card icon\"></i>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Job Title*\"\n                value={formData.title}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"email\">Email*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-globe icon\"></i>\n              <input\n                type=\"text\"\n                name=\"company\"\n                id=\"company\"\n                placeholder=\"company\"\n                value={formData.company}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password\">Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-map-marker icon\"></i>\n              <input\n                type=\"text\"\n                name=\"location\"\n                id=\"location\"\n                placeholder=\"location\"\n                value={formData.location}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-bolt icon\"></i>\n              <input\n                type=\"date\"\n                name=\"from\"\n                id=\"from\"\n                placeholder=\"from mm/dd/yyyy\"\n                value={formData.from}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-cogs icon\"></i>\n              <input\n                type=\"date\"\n                name=\"to\"\n                id=\"to\"\n                placeholder=\"to mm/dd/yyyy\"\n                value={formData.to}\n                onChange={(e) => onChange(e)}\n                required\n                disabled={toDateDisabled ? \"disabled\" : \"\"}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <p>Current Job</p>\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-github icon\"></i>\n              <input\n                type=\"checkbox\"\n                name=\"current\"\n                id=\"current\"\n                placeholder=\"current\"\n                value={formData.current}\n                onChange={(e) => {\n                  setFormData({ ...formData, current: !formData.current });\n                  toggleDisabled(!toDateDisabled);\n                }}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-info-circle icon\"></i>\n              <textarea\n                name=\"description\"\n                id=\"description\"\n                placeholder=\"description\"\n                value={formData.description}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n\n          <div className=\"form-field\">\n            <input type=\"submit\" name=\"submit\" id=\"submit\" value=\"update\" />\n          </div>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Register.isAuthenticated,\n  };\n};\n\nconst mapDispatchToProps = {\n  addExperience,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExperience);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/Posts.js",["194","195"],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/spinner.js",[],["196","197"],"/home/aditya/Desktop/MyProjects/MERN/client/src/actions/navbar.js",[],["198","199"],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/dashboard/Education.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/PostItem.js",["200"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport parse from \"html-react-parser\";\nimport { connect } from \"react-redux\";\nimport { deletePost } from \"../../actions/posts\";\nconst PostItem = (props) => {\n  return (\n    <Fragment>\n      <div className=\"postTile tile\">\n        <Link\n          to={`/profile/${props.post.user}`}\n          style={{ textDecoration: \"none\", color: \"gray\" }}\n        >\n          <div\n            style={{\n              padding: \"1vh\",\n              display: \"flex\",\n              alignItems: \"center\",\n              borderBottom: \"1px solid gray\",\n              marginBottom: \"1vh\",\n            }}\n          >\n            <div style={{ width: \"30px\", marginRight: \"1vw\" }}>\n              <img\n                src={props.post.avatar}\n                style={{ width: \"100%\", borderRadius: \"50%\" }}\n              />\n            </div>\n            <small>{props.post.name}</small>\n          </div>\n        </Link>\n        <div className=\"postTileHead\">\n          <Link\n            to={`/posts/${props.post._id}`}\n            style={{ textDecoration: \"none\" }}\n          >\n            <div>\n              {props.post.title ? (\n                <h3>{parse(props.post.title)}</h3>\n              ) : (\n                <h3>Untitled Post...</h3>\n              )}\n            </div>\n          </Link>\n          <small style={{ color: \"gray\" }}>\n            {props.post.date.slice(0, 10)}\n          </small>\n        </div>\n        <br />\n        {/* <small>By: {props.post.name}</small>\n        <br /> */}\n        <div className=\"like\">\n          <div style={{ marginRight: \"1vh\", padding: \"1vh\" }}>\n            <i className=\"fa fa-thumbs-up fa-sm\" style={{ color: \"gray\" }}></i>\n            {props.post.likes.length}\n          </div>\n\n          <div style={{ padding: \"1vh\" }}>\n            <i className=\"fa fa-comment fa-sm\" style={{ color: \"gray\" }}></i>\n            {props.post.comments.length}\n          </div>\n          {props.post.user === props.user.user._id ? (\n            <button\n              className=\"btn-delete\"\n              onClick={() => props.deletePost(props.post._id)}\n            >\n              Delete\n            </button>\n          ) : null}\n        </div>\n      </div>\n\n      <br />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.Register,\n  };\n};\nexport default connect(mapStateToProps, { deletePost })(PostItem);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/profile.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/utils/setAuthToken.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/profile-form/AddEducation.js",["201","202"],"import React, { Fragment, useState } from \"react\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\nconst AddEducation = (props) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const onChange = async (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log(formData);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    props.addEducation(formData, props.history);\n  };\n\n  if (!props.isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Fragment>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form tile\">\n          <h2>Add An Education :</h2>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"name\">Name*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-address-card icon\"></i>\n              <input\n                type=\"text\"\n                name=\"school\"\n                placeholder=\"School*\"\n                value={formData.school}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"email\">Email*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-globe icon\"></i>\n              <input\n                type=\"text\"\n                name=\"degree\"\n                id=\"degree\"\n                placeholder=\"degree\"\n                value={formData.degree}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password\">Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-map-marker icon\"></i>\n              <input\n                type=\"text\"\n                name=\"fieldofstudy\"\n                id=\"fieldofstudy\"\n                placeholder=\"Field of Study\"\n                value={formData.fieldofstudy}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-bolt icon\"></i>\n              <input\n                type=\"date\"\n                name=\"from\"\n                id=\"from\"\n                placeholder=\"from mm/dd/yyyy\"\n                value={formData.from}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-cogs icon\"></i>\n              <input\n                type=\"date\"\n                name=\"to\"\n                id=\"to\"\n                placeholder=\"to mm/dd/yyyy\"\n                value={formData.to}\n                onChange={(e) => onChange(e)}\n                required\n                disabled={toDateDisabled ? \"disabled\" : \"\"}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <p>Current</p>\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-github icon\"></i>\n              <input\n                type=\"checkbox\"\n                name=\"current\"\n                id=\"current\"\n                placeholder=\"current\"\n                value={formData.current}\n                onChange={(e) => {\n                  setFormData({ ...formData, current: !formData.current });\n                  toggleDisabled(!toDateDisabled);\n                }}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-field\">\n            {/* <label htmlFor=\"password1\">Confirm Password*</label> */}\n            <div className=\"set\">\n              <i className=\"fa fa-lg fa-info-circle icon\"></i>\n              <textarea\n                name=\"description\"\n                id=\"description\"\n                placeholder=\"description\"\n                value={formData.description}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n          <hr />\n\n          <div className=\"form-field\">\n            <input type=\"submit\" name=\"submit\" id=\"submit\" value=\"update\" />\n          </div>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Register.isAuthenticated,\n  };\n};\n\nconst mapDispatchToProps = {\n  addEducation,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEducation);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/actions/profile.js",["203"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  DELETE_PROFILE,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from \"./types\";\n\n//get the current user's profile\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n//get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n//get profile by id\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n//get github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n// create or update the profile\n\nexport const createProfile = (formdata, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n    const res = await axios.post(\"/api/profile\", formdata, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((element) => {\n        dispatch(setAlert(element.msg, \"danger\"));\n      });\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n//Add experience\n\nexport const addExperience = (formdata, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n    const res = await axios.put(\"/api/profile/experience\", formdata, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((element) => {\n        dispatch(setAlert(element.msg, \"danger\"));\n      });\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n//Add education\n\nexport const addEducation = (formdata, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n    const res = await axios.put(\"/api/profile/education\", formdata, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((element) => {\n        dispatch(setAlert(element.msg, \"danger\"));\n      });\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.data },\n    });\n  }\n};\n\n//delete experience\n\nexport const deleteExperience = (exp_id, history) => async (dispatch) => {\n  if (window.confirm(\"Are You Sure?\")) {\n    try {\n      const res = await axios.delete(`api/profile/experience/${exp_id}`);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data,\n      });\n      history.push(\"/dashboard\");\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((element) => {\n          dispatch(setAlert(element.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.data },\n      });\n    }\n  }\n};\n\n//delete education\n\nexport const deleteEducation = (edu_id, history) => async (dispatch) => {\n  if (window.confirm(\"Are You Sure\")) {\n    try {\n      const res = await axios.delete(`api/profile/education/${edu_id}`);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data,\n      });\n      history.push(\"/dashboard\");\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((element) => {\n          dispatch(setAlert(element.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.data },\n      });\n    }\n  }\n};\n\n//delete profile and account\nexport const deleteProfile = () => async (dispatch) => {\n  if (window.confirm(\"Are You sure? This can' be undone\")) {\n    try {\n      const res = await axios.delete(`api/profile/`);\n      dispatch({\n        type: CLEAR_PROFILE,\n      });\n      dispatch({\n        type: DELETE_PROFILE,\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((element) => {\n          dispatch(setAlert(element.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.data },\n      });\n    }\n  }\n};\n","/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/CreatePost.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/auth/Register.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/actions/alert.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/posts/Post.js",["204","205"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { getPostById, likePost, unlikePost } from \"../../actions/posts\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport parse from \"html-react-parser\";\nimport CommentForm from \"../comments/CommentForm\";\nimport Comment from \"../comments/comment\";\nconst Post = (props) => {\n  const postid = props.match.params.id;\n  useEffect(() => props.getPostById(postid), []);\n\n  return (\n    <Fragment>\n      {props.posts.post === null || props.posts.loading === true ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className=\"main\">\n            <div className=\"post\">\n              <div className=\"postDate\">\n                <p>{props.posts.post.post.date.slice(0, 10)}</p>\n              </div>\n              <div className=\"postHead\">\n                {props.posts.post.post.title ? (\n                  <h2>{props.posts.post.post.title}</h2>\n                ) : (\n                  <h2>Untitled Post</h2>\n                )}\n              </div>\n              <div className=\"postAuth\">\n                <small>By:{props.posts.post.post.name}</small>\n              </div>\n              <hr />\n              <br />\n              <div className=\"postText\">\n                <p>{parse(props.posts.post.post.text)}</p>\n              </div>\n              <br />\n              <hr />\n              <br />\n              <div className=\"like\">\n                <button\n                  onClick={() => {\n                    props.likePost(postid);\n                  }}\n                  style={{ backgroundColor: \"dodgerblue\" }}\n                >\n                  <i className=\"fa fa-thumbs-up fa-sm\"></i>\n                  Like {props.posts.post.post.likes.length}\n                </button>\n                <button\n                  onClick={() => props.unlikePost(postid)}\n                  style={{ backgroundColor: \"red\" }}\n                >\n                  <i className=\"fa fa-thumbs-down fa-sm\"></i>\n                  Unlike\n                </button>\n                <button style={{ backgroundColor: \"gray\" }}>\n                  <i className=\"fa fa-share fa-sm\"></i>\n                  Share\n                </button>\n              </div>\n              <br />\n              <hr />\n              <div className=\"commentSection\">\n                <h3>Comments:</h3>\n\n                {props.posts.post.post.comments.map((comment) => {\n                  return <Comment comment={comment} />;\n                })}\n              </div>\n              <CommentForm postid={postid} />\n            </div>\n          </div>\n          <br />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n  };\n};\n\nconst mapDispatchToProps = {\n  getPostById,\n  likePost,\n  unlikePost,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/store.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/profiles/Profiles.js",["206"],"import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport { getProfiles } from \"../../actions/profile\";\nimport ProfileItem from \"./ProfileItem\";\nconst Profiles = (props) => {\n  useEffect(() => {\n    props.getProfiles();\n  }, []);\n  // console.log(props.profile.profiles.length);\n  return (\n    <Fragment>\n      {props.profile.loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className=\"main\">\n            <h2>Developers</h2>\n            <div className=\"profiles\">\n              {props.profile.profiles.profiles ? (\n                props.profile.profiles.profiles.map((profile) => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                <h2>No Profiles Found</h2>\n              )}\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profile,\n  };\n};\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/auth.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/App.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/comments/CommentForm.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/reducers/alert.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/layout/Landing.js",[],"/home/aditya/Desktop/MyProjects/MERN/client/src/components/comments/comment.js",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"208","replacedBy":"212"},{"ruleId":"210","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":10,"column":46,"nodeType":"216","endLine":10,"endColumn":48,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":49,"column":6,"nodeType":"216","endLine":49,"endColumn":8,"suggestions":"222"},{"ruleId":"208","replacedBy":"223"},{"ruleId":"210","replacedBy":"224"},{"ruleId":"214","severity":1,"message":"225","line":9,"column":6,"nodeType":"216","endLine":9,"endColumn":28,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":22,"column":17,"nodeType":"229","endLine":22,"endColumn":80},{"ruleId":"208","replacedBy":"230"},{"ruleId":"210","replacedBy":"231"},{"ruleId":"218","severity":1,"message":"232","line":4,"column":3,"nodeType":"220","messageId":"221","endLine":4,"endColumn":14},{"ruleId":"218","severity":1,"message":"233","line":50,"column":11,"nodeType":"220","messageId":"221","endLine":50,"endColumn":14},{"ruleId":"218","severity":1,"message":"234","line":2,"column":16,"nodeType":"220","messageId":"221","endLine":2,"endColumn":24},{"ruleId":"227","severity":1,"message":"228","line":93,"column":11,"nodeType":"229","endLine":93,"endColumn":57},{"ruleId":"218","severity":1,"message":"235","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":2,"column":20,"nodeType":"220","messageId":"221","endLine":2,"endColumn":24},{"ruleId":"218","severity":1,"message":"236","line":2,"column":26,"nodeType":"220","messageId":"221","endLine":2,"endColumn":36},{"ruleId":"218","severity":1,"message":"234","line":6,"column":16,"nodeType":"220","messageId":"221","endLine":6,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":13,"column":6,"nodeType":"216","endLine":13,"endColumn":8,"suggestions":"237"},{"ruleId":"208","replacedBy":"238"},{"ruleId":"210","replacedBy":"239"},{"ruleId":"208","replacedBy":"240"},{"ruleId":"210","replacedBy":"241"},{"ruleId":"227","severity":1,"message":"228","line":24,"column":15,"nodeType":"229","endLine":27,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":2,"column":20,"nodeType":"220","messageId":"221","endLine":2,"endColumn":24},{"ruleId":"218","severity":1,"message":"236","line":2,"column":26,"nodeType":"220","messageId":"221","endLine":2,"endColumn":36},{"ruleId":"218","severity":1,"message":"233","line":224,"column":13,"nodeType":"220","messageId":"221","endLine":224,"endColumn":16},{"ruleId":"218","severity":1,"message":"242","line":1,"column":38,"nodeType":"220","messageId":"221","endLine":1,"endColumn":46},{"ruleId":"214","severity":1,"message":"243","line":10,"column":46,"nodeType":"216","endLine":10,"endColumn":48,"suggestions":"244"},{"ruleId":"214","severity":1,"message":"215","line":9,"column":6,"nodeType":"216","endLine":9,"endColumn":8,"suggestions":"245"},{"ruleId":"227","severity":1,"message":"228","line":8,"column":11,"nodeType":"229","endLine":11,"endColumn":13},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],["246"],["247"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["248"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["249"],["246"],["247"],"React Hook useEffect has missing dependencies: 'props' and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["250"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["246"],["247"],"'DELETE_POST' is defined but never used.","'res' is assigned a value but never used.","'Redirect' is defined but never used.","'PropTypes' is defined but never used.","'withRouter' is defined but never used.",["251"],["246"],["247"],["246"],["247"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'postid' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["252"],["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},{"desc":"254","fix":"259"},{"desc":"260","fix":"261"},{"desc":"254","fix":"262"},"Update the dependencies array to be: [props]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [props, props.getProfileById, userId]",{"range":"266","text":"267"},{"range":"268","text":"264"},"Update the dependencies array to be: [postid, props]",{"range":"269","text":"270"},{"range":"271","text":"264"},[460,462],"[props]",[1631,1633],[319,341],"[props, props.getProfileById, userId]",[431,433],[459,461],"[postid, props]",[306,308]]